{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"11URSFgpj1GeF1DJuf-X7dq-KEKFB_geN","timestamp":1679941571362},{"file_id":"1s-BvUntY6F_X_f-uHrfTV857g49AXG_y","timestamp":1679940310667}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## **1. Data Preprocessing**"],"metadata":{"id":"WoM-MP0yQeSx"}},{"cell_type":"markdown","source":["### **1) Import Required Libraries**\n","Import the basic libraries to upload, explore, and transform\n","\n","\n","---\n","\n"],"metadata":{"id":"VaoYWJDtRNwW"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"],"metadata":{"id":"5Xzq5PrqRSyv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **2) Upload the datasets**\n","Upload the dataset to the Python environment\n","\n","\n","---\n","\n"],"metadata":{"id":"PRDZzwfPQg9Z"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BHetXCQvQakj","executionInfo":{"status":"ok","timestamp":1680382059148,"user_tz":240,"elapsed":24048,"user":{"displayName":"Viha Mashruwala","userId":"15359727229590561134"}},"outputId":"d6b88b59-4bc5-4e12-d321-66500e161c6f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["# change the path \n","data_set = pd.read_csv(\"drive/MyDrive/data.csv\")\n","songs = pd.read_csv(\"/content/drive/MyDrive/songs.csv\")\n","songs_extra_info = pd.read_csv(\"/content/drive/MyDrive/song_extra_info.csv\")\n","members = pd.read_csv(\"/content/drive/MyDrive/members.csv\")"],"metadata":{"id":"G-CbkrlnQ8xM","colab":{"base_uri":"https://localhost:8080/","height":380},"executionInfo":{"status":"error","timestamp":1680385690273,"user_tz":240,"elapsed":1001,"user":{"displayName":"Viha Mashruwala","userId":"15359727229590561134"}},"outputId":"2964c47f-753e-493f-ad9f-2df44818a873"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-257d0759dcad>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# change the path\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mdata_set\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"drive/MyDrive/data.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0msongs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/songs.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0msongs_extra_info\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/song_extra_info.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmembers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/members.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    676\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    677\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 678\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    679\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    680\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    573\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    574\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 575\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    576\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    577\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    930\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    931\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 932\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    933\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    934\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1214\u001b[0m             \u001b[0;31m# \"Union[str, PathLike[str], ReadCsvBuffer[bytes], ReadCsvBuffer[str]]\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1215\u001b[0m             \u001b[0;31m# , \"str\", \"bool\", \"Any\", \"Any\", \"Any\", \"Any\", \"Any\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1216\u001b[0;31m             self.handles = get_handle(  # type: ignore[call-overload]\n\u001b[0m\u001b[1;32m   1217\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.9/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    784\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    785\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 786\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    787\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    788\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/songs.csv'"]}]},{"cell_type":"markdown","source":["\n","### **3) Explore the datasets**\n","Explore and understand the data before modeling\n","\n","\n","---\n","\n"],"metadata":{"id":"rV95glkaQ3K3"}},{"cell_type":"markdown","source":["Name  | Description\n","-------------------|------------------\n","`train_set `    | Train records of listening to music from users \n","`test_set `   | Test historical records of listening to music\n","`songs`    | Information about songs, including artist name, genres, etc\n","`songs_extra_info`    | Additional information of songs (song name, isrc code)\n","`members`    | Information about members including city, age, gender, registration activity\n","\n","More Detail: https://www.kaggle.com/competitions/kkbox-music-recommendation-challenge/data"],"metadata":{"id":"Dq6Wq_RzTofI"}},{"cell_type":"markdown","source":["**3-1) Description of the structure** <br>\n","Check the data type of each attribute and a basic structure in each set\n","\n","\n","---\n","\n"],"metadata":{"id":"oHK-UdCoRwzZ"}},{"cell_type":"markdown","source":["`train_set`\n","1. 7,377,418 rows x 6 columns\n","2. All nominal variables"],"metadata":{"id":"PAPcc_H_SKSd"}},{"cell_type":"code","source":["train_set.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"W-lNi1s-RvuY","executionInfo":{"status":"error","timestamp":1680382419376,"user_tz":240,"elapsed":5,"user":{"displayName":"Viha Mashruwala","userId":"15359727229590561134"}},"outputId":"2da88d50-ac52-4f88-afca-7b74d8b4f50e"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-6dd4accfd22d>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain_set\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'train_set' is not defined"]}]},{"cell_type":"markdown","source":["`test_set`\n","1. 2,556,790 rows x 6 columns\n","2. All nominal variables except `id` (numeric)"],"metadata":{"id":"sAZyxrSDSa2B"}},{"cell_type":"code","source":["test_set.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YM-8Zb-OSBdj","executionInfo":{"status":"ok","timestamp":1679706041535,"user_tz":240,"elapsed":5,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"f2d44430-1009-4c3e-e71d-d0c74c07766f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2556790 entries, 0 to 2556789\n","Data columns (total 6 columns):\n"," #   Column              Dtype \n","---  ------              ----- \n"," 0   id                  int64 \n"," 1   msno                object\n"," 2   song_id             object\n"," 3   source_system_tab   object\n"," 4   source_screen_name  object\n"," 5   source_type         object\n","dtypes: int64(1), object(5)\n","memory usage: 117.0+ MB\n"]}]},{"cell_type":"markdown","source":["`songs`\n","1. 2,296,320 rows x 7 columns\n","2. `song_length`, `language` = int, float\n","3. others = string\n","4. Values in `genre_ids` are separated by |"],"metadata":{"id":"2Fxe-CvRSo_V"}},{"cell_type":"code","source":["songs.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZhKmfV8bSlsS","executionInfo":{"status":"ok","timestamp":1679706190894,"user_tz":240,"elapsed":7,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"488ee3f2-c2a1-4015-ac44-9cca63d0648d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2296320 entries, 0 to 2296319\n","Data columns (total 7 columns):\n"," #   Column       Dtype  \n","---  ------       -----  \n"," 0   song_id      object \n"," 1   song_length  int64  \n"," 2   genre_ids    object \n"," 3   artist_name  object \n"," 4   composer     object \n"," 5   lyricist     object \n"," 6   language     float64\n","dtypes: float64(1), int64(1), object(5)\n","memory usage: 122.6+ MB\n"]}]},{"cell_type":"markdown","source":["`songs_extra_info`\n","1. 2,295,971 rows x 3 columns\n","2. All attributes are string"],"metadata":{"id":"6Z4yVrmnTHYe"}},{"cell_type":"code","source":["songs_extra_info.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p_ooKymJSoor","executionInfo":{"status":"ok","timestamp":1679706317769,"user_tz":240,"elapsed":6,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"24bfc6fe-2817-4b16-bcd3-60583f8b5fe0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2295971 entries, 0 to 2295970\n","Data columns (total 3 columns):\n"," #   Column   Dtype \n","---  ------   ----- \n"," 0   song_id  object\n"," 1   name     object\n"," 2   isrc     object\n","dtypes: object(3)\n","memory usage: 52.6+ MB\n"]}]},{"cell_type":"markdown","source":["`members`\n","1. 34,403 rows x 7 columns\n","2. All attributes are string except `msno` and `gender`"],"metadata":{"id":"MUwRkpWzTRmj"}},{"cell_type":"code","source":["members.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2FbH4QwKTQBP","executionInfo":{"status":"ok","timestamp":1679706360948,"user_tz":240,"elapsed":5,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"277e7205-b8f8-4611-de81-41906d1d1061"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 34403 entries, 0 to 34402\n","Data columns (total 7 columns):\n"," #   Column                  Non-Null Count  Dtype \n","---  ------                  --------------  ----- \n"," 0   msno                    34403 non-null  object\n"," 1   city                    34403 non-null  int64 \n"," 2   bd                      34403 non-null  int64 \n"," 3   gender                  14501 non-null  object\n"," 4   registered_via          34403 non-null  int64 \n"," 5   registration_init_time  34403 non-null  int64 \n"," 6   expiration_date         34403 non-null  int64 \n","dtypes: int64(5), object(2)\n","memory usage: 1.8+ MB\n"]}]},{"cell_type":"markdown","source":["**3-2) Statistical Summary** <br>\n","Investigate whether there are outliers in each numberic variable, or review the composition of values in each categorical variable\n","\n","\n","---\n","\n"],"metadata":{"id":"dXok1ub6UkX1"}},{"cell_type":"markdown","source":["**Numeric Variables**\n","1. `songs` - `song_length`"],"metadata":{"id":"9ZoJE8i3eqd-"}},{"cell_type":"code","source":["print(songs[\"song_length\"].describe())\n","print(\"\\t\")\n","plt.boxplot(songs[\"song_length\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"qhKbl0vjUnPe","executionInfo":{"status":"ok","timestamp":1679707077855,"user_tz":240,"elapsed":642,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"c87220fe-a837-4035-8dae-e72fb116aa92"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["count    2.296320e+06\n","mean     2.469935e+05\n","std      1.609200e+05\n","min      1.850000e+02\n","25%      1.836000e+05\n","50%      2.266270e+05\n","75%      2.772690e+05\n","max      1.217385e+07\n","Name: song_length, dtype: float64\n","\t\n"]},{"output_type":"execute_result","data":{"text/plain":["{'whiskers': [<matplotlib.lines.Line2D at 0x7f464fb005b0>,\n","  <matplotlib.lines.Line2D at 0x7f464fb00850>],\n"," 'caps': [<matplotlib.lines.Line2D at 0x7f464fb00af0>,\n","  <matplotlib.lines.Line2D at 0x7f464fb00d90>],\n"," 'boxes': [<matplotlib.lines.Line2D at 0x7f464fb00310>],\n"," 'medians': [<matplotlib.lines.Line2D at 0x7f464fafe070>],\n"," 'fliers': [<matplotlib.lines.Line2D at 0x7f464fafe310>],\n"," 'means': []}"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["2. `members` - `bd` (age)"],"metadata":{"id":"ymT-eXVueyjF"}},{"cell_type":"code","source":["print(members[\"bd\"].describe())\n","print(\"\\t\")\n","plt.boxplot(members[\"bd\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":586},"id":"DlCeKbfAe7aj","executionInfo":{"status":"ok","timestamp":1679709430111,"user_tz":240,"elapsed":495,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"390a2e29-527e-459a-c3d8-7d0eb47f4bd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["count    34403.000000\n","mean        12.280935\n","std         18.170251\n","min        -43.000000\n","25%          0.000000\n","50%          0.000000\n","75%         25.000000\n","max       1051.000000\n","Name: bd, dtype: float64\n","\t\n"]},{"output_type":"execute_result","data":{"text/plain":["{'whiskers': [<matplotlib.lines.Line2D at 0x7f464fd409a0>,\n","  <matplotlib.lines.Line2D at 0x7f464fd40c40>],\n"," 'caps': [<matplotlib.lines.Line2D at 0x7f464fd40ee0>,\n","  <matplotlib.lines.Line2D at 0x7f464fccb1c0>],\n"," 'boxes': [<matplotlib.lines.Line2D at 0x7f464fd40700>],\n"," 'medians': [<matplotlib.lines.Line2D at 0x7f464fccb460>],\n"," 'fliers': [<matplotlib.lines.Line2D at 0x7f464fccb700>],\n"," 'means': []}"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**Categorical Variables**"],"metadata":{"id":"E2gZcXa_fApS"}},{"cell_type":"markdown","source":["`train_set` & `test_set`"],"metadata":{"id":"j0AMYohgfhiX"}},{"cell_type":"code","source":["train_set.groupby(\"source_system_tab\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TZ1W-as1fWc_","executionInfo":{"status":"ok","timestamp":1679709567414,"user_tz":240,"elapsed":1435,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"2d58a6f4-d6b4-44d9-a005-59659849e769"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["source_system_tab\n","discover        2179252\n","explore          167949\n","listen with      212266\n","my library      3684730\n","notification       6185\n","radio            476701\n","search           623286\n","settings           2200\n","dtype: int64"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["train_set.groupby(\"source_screen_name\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YGEVBOQ-fkym","executionInfo":{"status":"ok","timestamp":1679709601095,"user_tz":240,"elapsed":197,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"f0e17ebc-47c4-40a9-9ecb-869260cc0f84"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["source_screen_name\n","Album more               420156\n","Artist more              252429\n","Concert                      47\n","Discover Chart           213658\n","Discover Feature         244246\n","Discover Genre            82202\n","Discover New              15955\n","Explore                   72342\n","Local playlist more     3228202\n","My library                75980\n","My library_Search          6451\n","Online playlist more    1294689\n","Others profile more      201795\n","Payment                      12\n","Radio                    474467\n","Search                   298487\n","Search Home               13482\n","Search Trends             13632\n","Self profile more           212\n","Unknown                   54170\n","dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["train_set.groupby(\"target\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dnmg6gEAfouo","executionInfo":{"status":"ok","timestamp":1679709626560,"user_tz":240,"elapsed":197,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"734b52b8-544c-4dcb-f7c8-a9c9561eae60"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["target\n","0    3662762\n","1    3714656\n","dtype: int64"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["`songs`"],"metadata":{"id":"OluMkhYgfwWY"}},{"cell_type":"code","source":["songs.groupby(\"language\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tAhbb4w5fxuB","executionInfo":{"status":"ok","timestamp":1679709693260,"user_tz":240,"elapsed":211,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"7e763e44-7347-4b87-8c41-5b4148b920c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["language\n","-1.0      639467\n"," 3.0      106295\n"," 10.0      15482\n"," 17.0      92518\n"," 24.0      41744\n"," 31.0      39201\n"," 38.0       2385\n"," 45.0      14435\n"," 52.0    1336694\n"," 59.0       8098\n","dtype: int64"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["`members`"],"metadata":{"id":"8HmMUQGUgjwr"}},{"cell_type":"code","source":["members.groupby(\"city\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Tb_XWYAfPuV","executionInfo":{"status":"ok","timestamp":1679709523769,"user_tz":240,"elapsed":7,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"6b78c450-61cb-425d-b888-be04ed0fc6da"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["city\n","1     19445\n","3       204\n","4      1732\n","5      2634\n","6       913\n","7        93\n","8       289\n","9       309\n","10      216\n","11      285\n","12      491\n","13     3395\n","14      708\n","15     1525\n","16       35\n","17      152\n","18      259\n","19       11\n","20       27\n","21      213\n","22     1467\n","dtype: int64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["members.groupby(\"bd\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qk3oNUDIgltZ","executionInfo":{"status":"ok","timestamp":1679709856572,"user_tz":240,"elapsed":217,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"3479a357-fde9-4643-a531-2b40ecc53b58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bd\n","-43          1\n","-38          1\n"," 0       19932\n"," 2           1\n"," 3           1\n","         ...  \n"," 131         1\n"," 144         1\n"," 931         1\n"," 1030        1\n"," 1051        1\n","Length: 95, dtype: int64"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["members.groupby(\"gender\").size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j1e5NtZmgm7v","executionInfo":{"status":"ok","timestamp":1679709865385,"user_tz":240,"elapsed":198,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"8a58783e-b5fa-4685-eacc-0a4f5473bd2f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gender\n","female    7096\n","male      7405\n","dtype: int64"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["**3-3) Samples**\n","Check how each data set looks like\n","\n","\n","---\n","\n","\n"],"metadata":{"id":"xQoZO-keUmjz"}},{"cell_type":"markdown","source":["`train_set`"],"metadata":{"id":"mfaR4Sh8WQh3"}},{"cell_type":"code","source":["train_set.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9se5T2kmWjP1","executionInfo":{"status":"ok","timestamp":1679707231790,"user_tz":240,"elapsed":4,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"17a25816-65ee-441d-f47b-3fc4dc774970"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           msno  \\\n","0  FGtllVqz18RPiwJj/edr2gV78zirAiY/9SmYvia+kCg=   \n","1  Xumu+NIjS6QYVxDS4/t3SawvJ7viT9hPKXmf0RtLNx8=   \n","2  Xumu+NIjS6QYVxDS4/t3SawvJ7viT9hPKXmf0RtLNx8=   \n","3  Xumu+NIjS6QYVxDS4/t3SawvJ7viT9hPKXmf0RtLNx8=   \n","4  FGtllVqz18RPiwJj/edr2gV78zirAiY/9SmYvia+kCg=   \n","\n","                                        song_id source_system_tab  \\\n","0  BBzumQNXUHKdEBOB7mAJuzok+IJA1c2Ryg/yzTF6tik=           explore   \n","1  bhp/MpSNoqoxOIB+/l8WPqu6jldth4DIpCm3ayXnJqM=        my library   \n","2  JNWfrrC7zNN7BdMpsISKa4Mw+xVJYNnxXh3/Epw7QgY=        my library   \n","3  2A87tzfnJTSWqD7gIZHisolhe4DMdzkbd6LzO1KHjNs=        my library   \n","4  3qm6XTZ6MOCU11x8FIVbAGH5l5uMkT3/ZalWG1oo2Gc=           explore   \n","\n","    source_screen_name      source_type  target  \n","0              Explore  online-playlist       1  \n","1  Local playlist more   local-playlist       1  \n","2  Local playlist more   local-playlist       1  \n","3  Local playlist more   local-playlist       1  \n","4              Explore  online-playlist       1  "],"text/html":["\n","  <div id=\"df-0bd69ac6-60a7-47a4-a908-3741961ac844\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>msno</th>\n","      <th>song_id</th>\n","      <th>source_system_tab</th>\n","      <th>source_screen_name</th>\n","      <th>source_type</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>FGtllVqz18RPiwJj/edr2gV78zirAiY/9SmYvia+kCg=</td>\n","      <td>BBzumQNXUHKdEBOB7mAJuzok+IJA1c2Ryg/yzTF6tik=</td>\n","      <td>explore</td>\n","      <td>Explore</td>\n","      <td>online-playlist</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Xumu+NIjS6QYVxDS4/t3SawvJ7viT9hPKXmf0RtLNx8=</td>\n","      <td>bhp/MpSNoqoxOIB+/l8WPqu6jldth4DIpCm3ayXnJqM=</td>\n","      <td>my library</td>\n","      <td>Local playlist more</td>\n","      <td>local-playlist</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Xumu+NIjS6QYVxDS4/t3SawvJ7viT9hPKXmf0RtLNx8=</td>\n","      <td>JNWfrrC7zNN7BdMpsISKa4Mw+xVJYNnxXh3/Epw7QgY=</td>\n","      <td>my library</td>\n","      <td>Local playlist more</td>\n","      <td>local-playlist</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Xumu+NIjS6QYVxDS4/t3SawvJ7viT9hPKXmf0RtLNx8=</td>\n","      <td>2A87tzfnJTSWqD7gIZHisolhe4DMdzkbd6LzO1KHjNs=</td>\n","      <td>my library</td>\n","      <td>Local playlist more</td>\n","      <td>local-playlist</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>FGtllVqz18RPiwJj/edr2gV78zirAiY/9SmYvia+kCg=</td>\n","      <td>3qm6XTZ6MOCU11x8FIVbAGH5l5uMkT3/ZalWG1oo2Gc=</td>\n","      <td>explore</td>\n","      <td>Explore</td>\n","      <td>online-playlist</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bd69ac6-60a7-47a4-a908-3741961ac844')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0bd69ac6-60a7-47a4-a908-3741961ac844 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0bd69ac6-60a7-47a4-a908-3741961ac844');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["`test_set`"],"metadata":{"id":"iX8hBu0uWSck"}},{"cell_type":"code","source":["test_set.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"C39JRBFtWh4T","executionInfo":{"status":"ok","timestamp":1679707222215,"user_tz":240,"elapsed":4,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"e16a7dd5-84c9-4379-aaca-7a3fe3bcafa9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id                                          msno  \\\n","0   0  V8ruy7SGk7tDm3zA51DPpn6qutt+vmKMBKa21dp54uM=   \n","1   1  V8ruy7SGk7tDm3zA51DPpn6qutt+vmKMBKa21dp54uM=   \n","2   2  /uQAlrAkaczV+nWCd2sPF2ekvXPRipV7q0l+gbLuxjw=   \n","3   3  1a6oo/iXKatxQx4eS9zTVD+KlSVaAFbTIqVvwLC1Y0k=   \n","4   4  1a6oo/iXKatxQx4eS9zTVD+KlSVaAFbTIqVvwLC1Y0k=   \n","\n","                                        song_id source_system_tab  \\\n","0  WmHKgKMlp1lQMecNdNvDMkvIycZYHnFwDT72I5sIssc=        my library   \n","1  y/rsZ9DC7FwK5F2PK2D5mj+aOBUJAjuu3dZ14NgE0vM=        my library   \n","2  8eZLFOdGVdXBSqoAv5nsLigeH2BvKXzTQYtUM53I0k4=          discover   \n","3  ztCf8thYsS4YN3GcIL/bvoxLm/T5mYBVKOO4C9NiVfQ=             radio   \n","4  MKVMpslKcQhMaFEgcEQhEfi5+RZhMYlU3eRDpySrH8Y=             radio   \n","\n","    source_screen_name          source_type  \n","0  Local playlist more        local-library  \n","1  Local playlist more        local-library  \n","2                  NaN  song-based-playlist  \n","3                Radio                radio  \n","4                Radio                radio  "],"text/html":["\n","  <div id=\"df-4261615b-5b37-4da0-9167-c413917289af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>msno</th>\n","      <th>song_id</th>\n","      <th>source_system_tab</th>\n","      <th>source_screen_name</th>\n","      <th>source_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>V8ruy7SGk7tDm3zA51DPpn6qutt+vmKMBKa21dp54uM=</td>\n","      <td>WmHKgKMlp1lQMecNdNvDMkvIycZYHnFwDT72I5sIssc=</td>\n","      <td>my library</td>\n","      <td>Local playlist more</td>\n","      <td>local-library</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>V8ruy7SGk7tDm3zA51DPpn6qutt+vmKMBKa21dp54uM=</td>\n","      <td>y/rsZ9DC7FwK5F2PK2D5mj+aOBUJAjuu3dZ14NgE0vM=</td>\n","      <td>my library</td>\n","      <td>Local playlist more</td>\n","      <td>local-library</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>/uQAlrAkaczV+nWCd2sPF2ekvXPRipV7q0l+gbLuxjw=</td>\n","      <td>8eZLFOdGVdXBSqoAv5nsLigeH2BvKXzTQYtUM53I0k4=</td>\n","      <td>discover</td>\n","      <td>NaN</td>\n","      <td>song-based-playlist</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1a6oo/iXKatxQx4eS9zTVD+KlSVaAFbTIqVvwLC1Y0k=</td>\n","      <td>ztCf8thYsS4YN3GcIL/bvoxLm/T5mYBVKOO4C9NiVfQ=</td>\n","      <td>radio</td>\n","      <td>Radio</td>\n","      <td>radio</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1a6oo/iXKatxQx4eS9zTVD+KlSVaAFbTIqVvwLC1Y0k=</td>\n","      <td>MKVMpslKcQhMaFEgcEQhEfi5+RZhMYlU3eRDpySrH8Y=</td>\n","      <td>radio</td>\n","      <td>Radio</td>\n","      <td>radio</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4261615b-5b37-4da0-9167-c413917289af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4261615b-5b37-4da0-9167-c413917289af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4261615b-5b37-4da0-9167-c413917289af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["`songs` <br>\n","- `genre_ids`, `composer`, `lyricist`: can be one value or more than 2 values with the separator '`|`'"],"metadata":{"id":"mS9To-8sWTrr"}},{"cell_type":"code","source":["songs.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"id":"-dGyKtteWgrU","executionInfo":{"status":"ok","timestamp":1679707940651,"user_tz":240,"elapsed":10,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"0e411814-3bae-4011-a63e-763028e62546"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        song_id  song_length        genre_ids  \\\n","0  CXoTN1eb7AI+DntdU1vbcwGRV4SCIDxZu+YD8JP8r4E=       247640              465   \n","1  o0kFgae9QtnYgRkVPqLJwa05zIhRlUjfF7O1tDw0ZDU=       197328              444   \n","2  DwVvVurfpuz+XPuFvucclVQEyPqcpUkHR0ne1RQzPs0=       231781              465   \n","3  dKMBWoZyScdxSkihKG+Vf47nc18N9q4m58+b4e7dSSE=       273554              465   \n","4  W3bqWd3T+VeHFzHAUfARgW9AvVRaF4N5Yzm4Mr6Eo/o=       140329              726   \n","5  kKJ2JNU5h8rphyW21ovC+RZU+yEHPM+3w85J37p7vEQ=       235520  864|857|850|843   \n","6  N9vbanw7BSMoUgdfJlgX1aZPE1XZg8OS1wf88AQEcMc=       226220              458   \n","7  GsCpr618xfveHYJdo+E5SybrpR906tsjLMeKyrCNw8s=       276793              465   \n","8  oTi7oINPX+rxoGp+3O6llSltQTl80jDqHoULfRoLcG4=       228623              465   \n","9  btcG03OHY3GNKWccPP0auvtSbhxog/kllIIOx5grE/k=       232629         352|1995   \n","\n","         artist_name                                           composer  \\\n","0   張信哲 (Jeff Chang)                                                 董貞   \n","1          BLACKPINK                 TEDDY|  FUTURE BOUNCE|  Bekuh BOOM   \n","2       SUPER JUNIOR                                                NaN   \n","3              S.H.E                                                湯小康   \n","4               貴族精選                                        Traditional   \n","5               貴族精選                                       Joe Hisaishi   \n","6    伍佰 & China Blue                                       Jonathan Lee   \n","7  光良 (Michael Wong)                                                 光良   \n","8       林俊傑 (JJ Lin)                                             JJ Lin   \n","9           Kodaline  Stephen Garrigan| Mark Prendergast| Vincent Ma...   \n","\n","                                            lyricist  language  \n","0                                                何啟弘       3.0  \n","1                                              TEDDY      31.0  \n","2                                                NaN      31.0  \n","3                                                徐世珍       3.0  \n","4                                        Traditional      52.0  \n","5                                     Hayao Miyazaki      17.0  \n","6                                                NaN       3.0  \n","7                                                彭資閔       3.0  \n","8                                       Wu Qing Feng       3.0  \n","9  Stephen Garrigan| Mark Prendergast| Vincent Ma...      52.0  "],"text/html":["\n","  <div id=\"df-091e7348-a95b-4d0c-8ec9-04f5170bc970\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>song_id</th>\n","      <th>song_length</th>\n","      <th>genre_ids</th>\n","      <th>artist_name</th>\n","      <th>composer</th>\n","      <th>lyricist</th>\n","      <th>language</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CXoTN1eb7AI+DntdU1vbcwGRV4SCIDxZu+YD8JP8r4E=</td>\n","      <td>247640</td>\n","      <td>465</td>\n","      <td>張信哲 (Jeff Chang)</td>\n","      <td>董貞</td>\n","      <td>何啟弘</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>o0kFgae9QtnYgRkVPqLJwa05zIhRlUjfF7O1tDw0ZDU=</td>\n","      <td>197328</td>\n","      <td>444</td>\n","      <td>BLACKPINK</td>\n","      <td>TEDDY|  FUTURE BOUNCE|  Bekuh BOOM</td>\n","      <td>TEDDY</td>\n","      <td>31.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>DwVvVurfpuz+XPuFvucclVQEyPqcpUkHR0ne1RQzPs0=</td>\n","      <td>231781</td>\n","      <td>465</td>\n","      <td>SUPER JUNIOR</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>31.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>dKMBWoZyScdxSkihKG+Vf47nc18N9q4m58+b4e7dSSE=</td>\n","      <td>273554</td>\n","      <td>465</td>\n","      <td>S.H.E</td>\n","      <td>湯小康</td>\n","      <td>徐世珍</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>W3bqWd3T+VeHFzHAUfARgW9AvVRaF4N5Yzm4Mr6Eo/o=</td>\n","      <td>140329</td>\n","      <td>726</td>\n","      <td>貴族精選</td>\n","      <td>Traditional</td>\n","      <td>Traditional</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>kKJ2JNU5h8rphyW21ovC+RZU+yEHPM+3w85J37p7vEQ=</td>\n","      <td>235520</td>\n","      <td>864|857|850|843</td>\n","      <td>貴族精選</td>\n","      <td>Joe Hisaishi</td>\n","      <td>Hayao Miyazaki</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>N9vbanw7BSMoUgdfJlgX1aZPE1XZg8OS1wf88AQEcMc=</td>\n","      <td>226220</td>\n","      <td>458</td>\n","      <td>伍佰 &amp; China Blue</td>\n","      <td>Jonathan Lee</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>GsCpr618xfveHYJdo+E5SybrpR906tsjLMeKyrCNw8s=</td>\n","      <td>276793</td>\n","      <td>465</td>\n","      <td>光良 (Michael Wong)</td>\n","      <td>光良</td>\n","      <td>彭資閔</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>oTi7oINPX+rxoGp+3O6llSltQTl80jDqHoULfRoLcG4=</td>\n","      <td>228623</td>\n","      <td>465</td>\n","      <td>林俊傑 (JJ Lin)</td>\n","      <td>JJ Lin</td>\n","      <td>Wu Qing Feng</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>btcG03OHY3GNKWccPP0auvtSbhxog/kllIIOx5grE/k=</td>\n","      <td>232629</td>\n","      <td>352|1995</td>\n","      <td>Kodaline</td>\n","      <td>Stephen Garrigan| Mark Prendergast| Vincent Ma...</td>\n","      <td>Stephen Garrigan| Mark Prendergast| Vincent Ma...</td>\n","      <td>52.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-091e7348-a95b-4d0c-8ec9-04f5170bc970')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-091e7348-a95b-4d0c-8ec9-04f5170bc970 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-091e7348-a95b-4d0c-8ec9-04f5170bc970');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["`songs_extra_info`"],"metadata":{"id":"m944LLqjWVAj"}},{"cell_type":"code","source":["songs_extra_info.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"98V90e8hWeuK","executionInfo":{"status":"ok","timestamp":1679707211035,"user_tz":240,"elapsed":6,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"b63ab934-563c-4722-f028-8f0075de0ed0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        song_id             name          isrc\n","0  LP7pLJoJFBvyuUwvu+oLzjT+bI+UeBPURCecJsX1jjs=               我們  TWUM71200043\n","1  ClazTFnk6r0Bnuie44bocdNMM3rdlrq0bCGAsGUWcHE=  Let Me Love You  QMZSY1600015\n","2  u2ja/bZE3zhCGxvbbOB3zOoUjx27u40cf5g09UXMoKQ=              原諒我  TWA530887303\n","3  92Fqsy0+p6+RHe2EoLKjHahORHR1Kq1TBJoClW9v+Ts=          Classic  USSM11301446\n","4  0QFmz/+rJy1Q56C1DuYqT9hKKqi5TUqx0sN0IwvoHrw=             愛投羅網  TWA471306001"],"text/html":["\n","  <div id=\"df-49e8f8ba-1451-4547-98b1-2a81fff5ec96\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>song_id</th>\n","      <th>name</th>\n","      <th>isrc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LP7pLJoJFBvyuUwvu+oLzjT+bI+UeBPURCecJsX1jjs=</td>\n","      <td>我們</td>\n","      <td>TWUM71200043</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ClazTFnk6r0Bnuie44bocdNMM3rdlrq0bCGAsGUWcHE=</td>\n","      <td>Let Me Love You</td>\n","      <td>QMZSY1600015</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>u2ja/bZE3zhCGxvbbOB3zOoUjx27u40cf5g09UXMoKQ=</td>\n","      <td>原諒我</td>\n","      <td>TWA530887303</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>92Fqsy0+p6+RHe2EoLKjHahORHR1Kq1TBJoClW9v+Ts=</td>\n","      <td>Classic</td>\n","      <td>USSM11301446</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0QFmz/+rJy1Q56C1DuYqT9hKKqi5TUqx0sN0IwvoHrw=</td>\n","      <td>愛投羅網</td>\n","      <td>TWA471306001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49e8f8ba-1451-4547-98b1-2a81fff5ec96')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49e8f8ba-1451-4547-98b1-2a81fff5ec96 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49e8f8ba-1451-4547-98b1-2a81fff5ec96');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["`members`"],"metadata":{"id":"YN99J4m9WW4k"}},{"cell_type":"code","source":["members.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Nkj6r_IzWYdZ","executionInfo":{"status":"ok","timestamp":1679707199043,"user_tz":240,"elapsed":4,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"35262601-11eb-4dc6-ab40-d20619e73235"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           msno  city  bd gender  \\\n","0  XQxgAYj3klVKjR3oxPPXYYFp4soD4TuBghkhMTD4oTw=     1   0    NaN   \n","1  UizsfmJb9mV54qE9hCYyU07Va97c0lCRLEQX3ae+ztM=     1   0    NaN   \n","2  D8nEhsIOBSoE6VthTaqDX8U6lqjJ7dLdr72mOyLya2A=     1   0    NaN   \n","3  mCuD+tZ1hERA/o5GPqk38e041J8ZsBaLcu7nGoIIvhI=     1   0    NaN   \n","4  q4HRBfVSssAFS9iRfxWrohxuk9kCYMKjHOEagUMV6rQ=     1   0    NaN   \n","\n","   registered_via  registration_init_time  expiration_date  \n","0               7                20110820         20170920  \n","1               7                20150628         20170622  \n","2               4                20160411         20170712  \n","3               9                20150906         20150907  \n","4               4                20170126         20170613  "],"text/html":["\n","  <div id=\"df-ebc9743b-696d-4d51-b223-030d3a075d42\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>msno</th>\n","      <th>city</th>\n","      <th>bd</th>\n","      <th>gender</th>\n","      <th>registered_via</th>\n","      <th>registration_init_time</th>\n","      <th>expiration_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>XQxgAYj3klVKjR3oxPPXYYFp4soD4TuBghkhMTD4oTw=</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","      <td>20110820</td>\n","      <td>20170920</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>UizsfmJb9mV54qE9hCYyU07Va97c0lCRLEQX3ae+ztM=</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","      <td>20150628</td>\n","      <td>20170622</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>D8nEhsIOBSoE6VthTaqDX8U6lqjJ7dLdr72mOyLya2A=</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>20160411</td>\n","      <td>20170712</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>mCuD+tZ1hERA/o5GPqk38e041J8ZsBaLcu7nGoIIvhI=</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>9</td>\n","      <td>20150906</td>\n","      <td>20150907</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>q4HRBfVSssAFS9iRfxWrohxuk9kCYMKjHOEagUMV6rQ=</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>20170126</td>\n","      <td>20170613</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebc9743b-696d-4d51-b223-030d3a075d42')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ebc9743b-696d-4d51-b223-030d3a075d42 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ebc9743b-696d-4d51-b223-030d3a075d42');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["**3-4) Other Notes**"],"metadata":{"id":"sb0A8JIbgDQP"}},{"cell_type":"markdown","source":["1. Data in train and test sets are **chronologically ordered**. <br>\n","https://www.kaggle.com/code/kamilkk/i-have-to-say-this/notebook"],"metadata":{"id":"htZHtU09gF8l"}},{"cell_type":"markdown","source":["### **4) Handle missing values**\n","Check if there is missing values in the data sets and decide how to handle these values"],"metadata":{"id":"tQsQSzLGgzSK"}},{"cell_type":"markdown","source":["**4-1) Investigate Missing Values**"],"metadata":{"id":"AqZCoZRcg6fv"}},{"cell_type":"code","source":["train_set.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sWS9WNT-hWcq","executionInfo":{"status":"ok","timestamp":1679710068601,"user_tz":240,"elapsed":7628,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"5a5ccff9-6b68-4985-f1da-3dea9cc563b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["msno                       0\n","song_id                    0\n","source_system_tab      24849\n","source_screen_name    414804\n","source_type            21539\n","target                     0\n","dtype: int64"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["test_set.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WE4AinCVhZF3","executionInfo":{"status":"ok","timestamp":1679710073972,"user_tz":240,"elapsed":191,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"7f0e7690-1509-4026-fb48-abb179296f8b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                         0\n","msno                       0\n","song_id                    0\n","source_system_tab       8442\n","source_screen_name    162883\n","source_type             7297\n","dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["songs.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QfnLOb95hrfv","executionInfo":{"status":"ok","timestamp":1679710148756,"user_tz":240,"elapsed":2320,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"05bb56d0-e828-490c-f206-6466243b1a0a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["song_id              0\n","song_length          0\n","genre_ids        94116\n","artist_name          0\n","composer       1071354\n","lyricist       1945268\n","language             1\n","dtype: int64"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["songs_extra_info.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M0wV52Rqht3w","executionInfo":{"status":"ok","timestamp":1679710158436,"user_tz":240,"elapsed":1172,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"915ea91f-9b38-449b-88e3-d372cfbabf20"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["song_id         0\n","name            2\n","isrc       136548\n","dtype: int64"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["members.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_DBcFQoXhwV7","executionInfo":{"status":"ok","timestamp":1679710167159,"user_tz":240,"elapsed":193,"user":{"displayName":"Eunbi Kim","userId":"02831740168414332977"}},"outputId":"62a26a25-65be-4f06-bb71-b7cb3580de67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["msno                          0\n","city                          0\n","bd                            0\n","gender                    19902\n","registered_via                0\n","registration_init_time        0\n","expiration_date               0\n","dtype: int64"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["## **2. Data Modeling**"],"metadata":{"id":"OAWZkD9cP81m"}},{"cell_type":"markdown","source":["**2-1) Combine relevant features into a single feature**"],"metadata":{"id":"eaTIjftiQEff"}},{"cell_type":"code","source":["def combined_features(row):\t\n","\treturn row['keywords']+\" \"+row['cast']+\" \"+row['genres']+\" \"+row['director']\n","df[\"combined_features\"] = df.apply(combined_features, axis =1)\t"],"metadata":{"id":"5BZF0pyRQTcO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["[Comments]"],"metadata":{"id":"6drUEA0ARF2g"}},{"cell_type":"markdown","source":["**2-2) Extract Features**"],"metadata":{"id":"ktTEAJSzQS83"}},{"cell_type":"code","source":[],"metadata":{"id":"zrvBjdsjRC2T"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["[Comments]"],"metadata":{"id":"QcbjM9NKRDb0"}},{"cell_type":"markdown","source":["**2-3) Calculate Cosine Similarity**"],"metadata":{"id":"8mbXTfVuVHZ3"}},{"cell_type":"code","source":[],"metadata":{"id":"_QsK4My8VR76"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["[Comments]"],"metadata":{"id":"8OGiByZRRU88"}},{"cell_type":"markdown","source":["**2-4) Content User Likes**"],"metadata":{"id":"ko4WZGLYVVvk"}},{"cell_type":"code","source":[],"metadata":{"id":"WLiS6-NhVY1l"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**2-5) Generating the Similar Movies Matrix**"],"metadata":{"id":"TRf08ooXVZC2"}},{"cell_type":"code","source":[],"metadata":{"id":"ODzIV3J7Vcgo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**2-6) Sorting the Similar Movies List in Descending Order**"],"metadata":{"id":"fn4bYay3Vc8E"}},{"cell_type":"code","source":[],"metadata":{"id":"-KI2RCfuVg6S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**2-7) Print the similar movies**"],"metadata":{"id":"E5CCzsqoVhZC"}},{"cell_type":"code","source":[],"metadata":{"id":"dFD3v_8IVkST"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **3) Save the model**"],"metadata":{"id":"Df75j_cURQI9"}},{"cell_type":"markdown","source":["**3-8) Combine 1-7 as a single function**"],"metadata":{"id":"Zjc68JCpVkjO"}},{"cell_type":"markdown","source":["[Comments]"],"metadata":{"id":"AQ907FYwRWc3"}}]}